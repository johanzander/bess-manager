[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | frontend
)/
'''

[tool.ruff]
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "RUF", # Ruff-specific rules
    "G",  # flake8-logging-format
]
lint.ignore = [
    "E501",  # line too long - Let black handle line length
    "G004",  # Logging statement uses f-string (conflicts with Home Assistant policy)
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".env",
    "frontend",
    "node_modules",
]
target-version = "py310"

[tool.ruff.lint.isort]
known-first-party = ["core", "app"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "apscheduler.*",
    "loguru.*",
]
ignore_missing_imports = true
